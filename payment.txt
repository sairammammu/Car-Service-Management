import java.util.Scanner;

public class Payment {
    private static double balance = 51540.0; // Initial balance
    private static final String PIN = "0009"; // UPI PIN
    private Scanner scanner = new Scanner(System.in);
    private CarService carService; // Reference to CarService
    static Feedback Feedback = new Feedback();

    // Constructor to initialize CarService
    public Payment(CarService carService) {
        this.carService = carService;
    }

    // Method for processing slot booking payment
    public boolean slotBookPayment(User user) {
        return processPayment("Slot Booking", 1200.0, null, user);
    }

    // Method for processing service payment
    public boolean servicePayment(String carId, User user) {
        double serviceTotal = carService.getTotalBill(); // Get the total service bill

        // Display the detailed service bill before payment
        System.out.println("----- BILL BREAKDOWN -----");
        System.out.println(carService.getDetailedBill(carId));
        System.out.println("--------------------------");

        return processPayment("Service Payment", serviceTotal, carService, user);
    }

    // Core method for handling payments
    private boolean processPayment(String paymentType, double baseAmount, CarService carService, User user) {
        double bill = baseAmount;
        System.out.println("Slot booking bill: " + bill);
        System.out.println("--------------------------");
        // Ask for optional doorstep delivery
        System.out.println("Would you like to opt for doorstep delivery?");
        System.out.println("1. Yes, I would like doorstep delivery (Additional Rs-200)");
        System.out.println("2. No, I will pick up the vehicle myself");
        System.out.print("Choose an option: ");
        int deliveryChoice = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        if (deliveryChoice == 1) {
            bill += 200.0; // Add delivery charge to the bill
            System.out.println("You have chosen doorstep delivery. An additional charge of Rs-200 has been added.");
        } else {
            System.out.println("You have chosen to pick up the vehicle yourself.");
        }

        // Include service payment in the bill
        if (paymentType.equals("Service Payment") && carService != null) {
            bill += carService.getTotalBill(); // Add service cost to the bill
        }

        // Display the final bill
        displayBill(paymentType, baseAmount, deliveryChoice, bill);

        // Check for sufficient balance
        if (balance < bill) {
            System.out.println("Insufficient balance. Payment failed.");
            return false;
        }

        // Process payment
        if (!processPaymentMethod()) {
            return false;
        }

        // Verify PIN
        if (!verifyPin()) {
            System.out.println("Your bank account is temporarily blocked for 1 day due to multiple incorrect PIN attempts.");
            return false;
        }

        // Complete payment
        balance -= bill;
        System.out.println("Payment successful! Remaining balance: â‚¹" + balance);

        // Collect feedback
        collectFeedback(user);

        return true;
    }

    // Display bill details
    private void displayBill(String paymentType, double baseAmount, int deliveryChoice, double totalBill) {
        System.out.println("----- SLOT BOOKING BILL -----");
        System.out.println("Payment Type: " + paymentType);
        System.out.println("Base Amount: RS:" + baseAmount);
        if (deliveryChoice == 1) {
            System.out.println("Doorstep Delivery Charge: â‚¹200");
        }
        System.out.println("Total Amount Due: Rs:" + totalBill);
        System.out.println("----------------------");
    }

    // Process payment method selection
    private boolean processPaymentMethod() {
        System.out.println("Select a payment method:");
        System.out.println("1. GPAY");
        System.out.println("2. PHONEPE");
        System.out.println("3. PAYTM");
        System.out.print("Choose an option: ");
        int paymentChoice = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        if (paymentChoice < 1 || paymentChoice > 3) {
            System.out.println("Invalid choice. Payment failed.");
            return false;
        }
        return true;
    }

    // Verify PIN
    private boolean verifyPin() {
        int attempts = 0;
        while (attempts < 3) {
            System.out.print("Enter your UPI PIN: ");
            String enteredPin = scanner.nextLine();
            if (PIN.equals(enteredPin)) {
                System.out.println("PIN verified successfully.");
                return true;
            } else {
                attempts++;
                System.out.println("Incorrect PIN. Attempts remaining: " + (3 - attempts));
            }
        }
        return false;
    }

    public void checkPayment(User user) {
        System.out.print("Enter your Car ID to check the total service bill: ");
        String carId = scanner.nextLine();

        double totalBill = carService.getTotalServiceCost(carId);
        System.out.println("Total service bill for Car ID " + carId + ": â‚¹" + totalBill);

        System.out.print("Do you want to pay the bill? (yes/no): ");
        String choice = scanner.nextLine();
        if (choice.equalsIgnoreCase("yes")) {
            // Logic to process payment
            System.out.println("Payment processed successfully for Car ID: " + carId);
        } else {
            System.out.println("Payment cancelled.");
        }
    }

    // Collect feedback
    private void collectFeedback(User user) {
        System.out.println("Thank you for your payment. We value your feedback.");
        System.out.print("Please provide your feedback: ");
        String feedback = scanner.nextLine();
        Feedback.storeFeedback(feedback, user); // Store feedback using the Feedback class
        System.out.println("Thank you for your feedback! ðŸ˜Š");
    }

    // Logout method
    private void logout() {
        System.out.println("You have been logged out. Have a great day!");
        System.exit(0); // Ends the program
    }

    // Getter for balance
    public static double getBalance() {
        return balance;
    }

    // Method to check and display payment status
    public double getTotalBill() {
        return balance; // Or implement logic to calculate the total bill
    }

    public void checkPaymentStatus(User user) {
        System.out.println("Payment Status:");
        System.out.println("Total Bill: Rs-" + getTotalBill());
        System.out.print("Would you like to proceed with the payment? (yes/no): ");
        Scanner scanner = new Scanner(System.in);
        String response = scanner.nextLine();

        if (response.equalsIgnoreCase("yes")) {
            if (slotBookPayment(user)) {
                System.out.println("Payment successful! Thank you for your payment.");
            } else {
                System.out.println("Payment failed. Please try again.");
            }
        } else {
            System.out.println("Payment not processed.");
        }
    }
}